<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore" xmlns:mulerequester="http://www.mulesoft.org/schema/mule/mulerequester" xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:context="http://www.springframework.org/schema/context" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/current/mule-objectstore.xsd
http://www.mulesoft.org/schema/mule/mulerequester http://www.mulesoft.org/schema/mule/mulerequester/current/mule-mulerequester.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <http:listener-config name="api-httpListenerConfig" host="0.0.0.0" port="10010" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="api-config" raml="api.raml" consoleEnabled="false" doc:name="Router"/>
    <expression-filter expression="#[flowVars.ldapId == null || flowVars.ldapId.isEmpty()]" name="Expression" doc:name="Expression"/>
    <quartz:connector name="Quartz" validateConnections="true" doc:name="Quartz">
    	<receiver-threading-profile maxThreadsActive="1"/>
    </quartz:connector>
    <objectstore:config name="ObjectStore__Connector" persistent="true" doc:name="ObjectStore: Connector" partition="_objectstore_partition_"/>
    
    <flow name="api-main">
        <http:listener config-ref="api-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="api-console">
        <http:listener config-ref="api-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="api-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="get:/extension:api-config">
        <set-variable variableName="mimetype" value="#[message.inboundProperties.'http.query.params'.mimetype]" doc:name="Set mimetype"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.mimetype == null || flowVars.mimetype.isEmpty()]">
                <set-property propertyName="http.status" value="400" doc:name="Property"/>
                <logger message="LDAP ID WAS NULL" level="INFO" doc:name="Logger"/>
                <scripting:component doc:name="Throw 400">
                    <scripting:script engine="Groovy"><![CDATA[throw new org.mule.module.apikit.exception.BadRequestException("LDAP ID WAS NULL");]]></scripting:script>
                </scripting:component>
            </when>
            <otherwise>
                <logger message="Processing LDAP ID: #[flowVars.ldapId]" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-variable doc:sample="sample_data/string.dwl" variableName="ldapId"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	status: "success",
	description: "Successfully found extension for MIME Type",
	data: {
			mimetype: flowVars.mimetype,
			extension: lookup('getExtension', flowVars.mimetype)
		}
}]]></dw:set-payload>
        </dw:transform-message>
        <choice doc:name="Choice">
            <when expression="#[payload.data.extension == null]">
                <set-property propertyName="http.status" value="404" doc:name="Copy_of_Copy_of_Property"/>
                <scripting:component doc:name="Copy_of_Copy_of_Throw 404">
                    <scripting:script engine="Groovy"><![CDATA[throw new org.mule.module.apikit.exception.NotFoundException("MIME TYPE WAS NOT FOUND");]]></scripting:script>
                </scripting:component>
            </when>
            <otherwise>
                <expression-component doc:name="Expression"><![CDATA[//Do nothing]]></expression-component>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="throw404">
        <set-property propertyName="http.status" value="404" doc:name="Copy_of_Property"/>
        <logger message="LDAP ID WAS NOT FOUND" level="INFO" doc:name="Copy_of_Logger"/>
        <set-payload value="#[&quot;&quot;]" doc:name="Set Payload"/>
        <scripting:component doc:name="Copy_of_Throw 404">
            <scripting:script engine="Groovy"><![CDATA[throw new org.mule.module.apikit.exception.NotFoundException("LDAP ID WAS NOT FOUND");]]></scripting:script>
        </scripting:component>
        <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="getExtension">
        <logger message="Requesting #[payload]'s organization from ObjectStore." level="INFO" doc:name="Logger"/>
        <objectstore:retrieve config-ref="ObjectStore__Connector" key="#[payload]" defaultValue-ref="#[flowVars.nullvalue]" targetProperty="#[flowVars.result]" doc:name="ObjectStore"/>
        <logger message="Got #[payload] from ObjectStore." level="INFO" doc:name="Logger"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-payload value="#[null]" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
    <flow name="PollObjectStore">
    <quartz:inbound-endpoint jobName="PollObjectStore" repeatInterval="86400000" responseTimeout="10000" doc:name="PollObjectStore" connector-ref="Quartz"  >
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <objectstore:retrieve-all-keys config-ref="ObjectStore__Connector" doc:name="ObjectStore"/>
        <choice doc:name="Choice">
            <when expression="#[payload.size() == 0]">
                <logger message="No data was found in objectstore. Inserting from file." level="INFO" doc:name="Logger"/>
                <mulerequester:request resource="file://${app.home}/mappings.json" doc:name="Mule Requester"/>
                <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
                <foreach collection="#[payload.entrySet()]" doc:name="For Each">
                    <objectstore:store config-ref="ObjectStore__Connector" key="#[payload.key]" value-ref="#[payload.value]" overwrite="true" doc:name="ObjectStore"/>
                </foreach>
                <logger message="Inserted all combinations into Objectstore" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <logger message="Data was found in objectstore. Not doing anything." level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
    </flow>
    
    <apikit:mapping-exception-strategy name="api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <dw:transform-message doc:name="Copy_of_Create fail message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	status: "fail",
	description: "ldap_id was not recognized",
	(data: {
		ldap_id: flowVars.ldapId 
	}) when flowVars.ldapId?
}]]></dw:set-payload>
            </dw:transform-message>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <dw:transform-message doc:name="Create fail message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	status: "fail",
	description: "ldap_id was empty",
	(data: {
		ldap_id: flowVars.ldapId 
	}) when flowVars.ldapId?
}]]></dw:set-payload>
            </dw:transform-message>
        </apikit:mapping>
        <apikit:mapping statusCode="500">
            <apikit:exception value="java.lang.RuntimeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <dw:transform-message doc:name="Create fail message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	status: "error",
	description: "An error occurred while handling your request",
	(data: {
		ldap_id: flowVars.ldapId 
	}) when flowVars.ldapId?
}]]></dw:set-payload>
            </dw:transform-message>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
